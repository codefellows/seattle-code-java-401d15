/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package alice;

import java.io.BufferedReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.HashMap;
import java.util.List;
import java.util.Scanner;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    // I will throw THAT exception, if I need to throw one.
    public static void main(String[] args) throws IOException {
        // PD: how man times does "Alice" show up in the file

        Path alicePath = Paths.get("alice_in_wonderland.txt");
        System.out.println(alicePath.toAbsolutePath());

        Scanner scanner = null;
        scanner = new Scanner(alicePath);

        String characterName = "Alice";
        HashMap<String, Integer> aliceMap = new HashMap<>();
        aliceMap.put(characterName, 0);
        // read the file line by line
        System.out.println("first line read! " + scanner.nextLine());
        while (scanner.hasNextLine()){
//        // check curren1 line for "Alice"
            String currentLine = scanner.nextLine();
        if(currentLine.contains(characterName)){
            aliceMap.put(characterName, (aliceMap.get(characterName) + 1));
        }
        }
        System.out.println("amount of times alice showed her face " + aliceMap.get(characterName));

        getAllLines("alice_in_wonderland.txt");
    }

    public static List<String> getAllLines(String filePath) throws IOException{
        Path path = Paths.get(filePath);
        return Files.readAllLines(path);
    }

    public static void readBufferTryCatch() throws IOException{
        Path alicePath = Paths.get("alice_in_wonderland.txt");
        BufferedReader reader = null;
        try {
            reader = Files.newBufferedReader(alicePath);
            String line = reader.readLine();
            while (line != null) {
                line = reader.readLine();
            }
        } catch (IOException ioe) {
            ioe.printStackTrace();
        } finally {
            reader.close();
        }
    }


    public static void readBufferTryWithResources(){
        Path alicePath = Paths.get("alice_in_wonderland.txt");
        try(BufferedReader reader = Files.newBufferedReader(alicePath)){
            String currentLine = reader.readLine();
            while(currentLine != null){
//                System.out.println(currentLine);
                currentLine = reader.readLine();
            }
            // note:  IntelliJ calls this line redundant!
            // because it's wrapped in the try () {} above
            // it will "auto close"
            reader.close();

            // if it accesses a i/o resource (files, network sockets)
            // and it has a close() method
            // then you probably want to wrap it in try () {}

        } catch (IOException ioe) {
            ioe.printStackTrace();
        }
    }
}
//            // STREAMS - buffering
//            // buffered reader
